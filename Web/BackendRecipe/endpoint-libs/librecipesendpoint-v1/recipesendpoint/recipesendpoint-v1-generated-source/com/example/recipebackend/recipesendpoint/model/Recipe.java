/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-07-08 17:28:43 UTC)
 * on 2016-08-29 at 14:43:27 UTC 
 * Modify at your own risk.
 */

package com.example.recipebackend.recipesendpoint.model;

/**
 * Model definition for Recipe.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the recipesendpoint. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Recipe extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CardInfo card;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("id_recipe")
  private java.lang.String idRecipe;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Key key;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Ingrrecipe> ling;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String steps;

  /**
   * @return value or {@code null} for none
   */
  public CardInfo getCard() {
    return card;
  }

  /**
   * @param card card or {@code null} for none
   */
  public Recipe setCard(CardInfo card) {
    this.card = card;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getIdRecipe() {
    return idRecipe;
  }

  /**
   * @param idRecipe idRecipe or {@code null} for none
   */
  public Recipe setIdRecipe(java.lang.String idRecipe) {
    this.idRecipe = idRecipe;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Key getKey() {
    return key;
  }

  /**
   * @param key key or {@code null} for none
   */
  public Recipe setKey(Key key) {
    this.key = key;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Ingrrecipe> getLing() {
    return ling;
  }

  /**
   * @param ling ling or {@code null} for none
   */
  public Recipe setLing(java.util.List<Ingrrecipe> ling) {
    this.ling = ling;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSteps() {
    return steps;
  }

  /**
   * @param steps steps or {@code null} for none
   */
  public Recipe setSteps(java.lang.String steps) {
    this.steps = steps;
    return this;
  }

  @Override
  public Recipe set(String fieldName, Object value) {
    return (Recipe) super.set(fieldName, value);
  }

  @Override
  public Recipe clone() {
    return (Recipe) super.clone();
  }

}
